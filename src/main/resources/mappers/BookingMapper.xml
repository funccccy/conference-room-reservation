<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace等于mapper接口类的全限定名  -->
<mapper namespace="com.conference.mapper.BookingMapper">

    <insert id="insert" parameterType="com.conference.entity.Booking">
        INSERT INTO booking (
        room_id,
        customer_id,
        start_time,
        end_time,
        total_hours,
        total_price,
        status_name,
        payment_status,
        created_time,
        booking_date
        ) VALUES (
        #{roomId},
        #{customerId},
        #{startTime},
        #{endTime},
        #{totalHours},
        #{totalPrice},
        #{statusName},
        #{paymentStatus},
        #{createTime},
        #{bookingDate}
        )
    </insert>

    <select id="selectByCustomerId" resultType="com.conference.entity.Booking">
        SELECT
        b.booking_id AS bookingId,
        b.room_id AS roomId,
        b.customer_id AS customerId,
        m.room_name AS roomName,
        b.booking_date AS bookingDate,
        b.start_time AS startTime,
        b.end_time AS endTime,
        b.total_hours AS totalHours,
        b.total_price AS totalPrice,
        b.status_name AS statusName,
        b.room_status AS roomStatus,
        b.payment_status AS paymentStatus,
        b.created_time AS createTime
        FROM
        booking b
        JOIN
        meeting_room m ON b.room_id = m.room_id
        WHERE
        b.customer_id = #{customerId}
        ORDER BY
        b.booking_date DESC
    </select>

    <select id="selectById" resultType="com.conference.entity.Booking">
        SELECT
        b.booking_id AS bookingId,
        b.room_id AS roomId,
        b.customer_id AS customerId,
        m.room_name AS roomName,
        b.booking_date AS bookingDate,
        b.start_time AS startTime,
        b.end_time AS endTime,
        b.total_hours AS totalHours,
        b.total_price AS totalPrice,
        b.status_name AS statusName,
        b.room_status AS roomStatus,
        b.payment_status AS paymentStatus,
        b.created_time AS createTime
        FROM
        booking b
        JOIN
        meeting_room m ON b.room_id = m.room_id
        WHERE b.booking_id = #{bookingId}
        ORDER BY
        b.booking_date DESC
    </select>

    <update id="updateBooking" parameterType="com.conference.entity.Booking">
        UPDATE booking
        <set>
            <if test="statusName != null">status_name = #{statusName},</if>
            <if test="paymentStatus != null">payment_status = #{paymentStatus},</if>
            <if test="totalPrice != null">total_price = #{totalPrice},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="roomStatus != null">room_status = #{roomStatus}</if>
        </set>
        WHERE booking_id = #{bookingId}
    </update>

</mapper>